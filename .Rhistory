df<-read.csv("dataPreProcessing1.csv",stringsAsFactors = FALSE)
glimpse(df)
set.seed(20)
df<-df[sample(nrow(df)),]
df<-df[sample(nrow(df)),]
glimpse(df)
corpus<-Corpus(VectorSource(df$text))
corpus
inspect(corpus[1:10])
#fungsinya untuk membersihkan data data yang tidak dibutuhkan
corpus.clean<-corpus%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, c("work", "from", "home"))%>%
tm_map(removeWords,stopwords(kind="en"))%>%
tm_map(stripWhitespace)
dtm<-DocumentTermMatrix(corpus.clean)
inspect(dtm[1:10,1:20])
df.train<-df[1:50,]
df.test<-df[51:100,]
dtm.train<-dtm[1:50,]
dtm.test<-dtm[51:100,]
corpus.clean.train<-corpus.clean[1:50]
corpus.clean.test<-corpus.clean[51:100]
dim(dtm.train)
fivefreq<-findFreqTerms(dtm.train,5)
length(fivefreq)
dtm.train.nb<-DocumentTermMatrix(corpus.clean.train,control = list(dictionary=fivefreq))
#dim(dtm.train.nb)
dtm.test.nb<-DocumentTermMatrix(corpus.clean.test,control = list(dictionary=fivefreq))
dim(dtm.test.nb)
convert_count <- function(x){
y<-ifelse(x>0,1,0)
y<-factor(y,levels=c(0,1),labels=c("no","yes"))
y
}
trainNB<-apply(dtm.train.nb,2,convert_count)
testNB<-apply(dtm.test.nb,1,convert_count)
wordcloud(corpus.clean,min.freq = 4,max.words=100,random.order=F,colors=brewer.pal(8,"Dark2"))
kalimat2<-read.csv("dataPreProcessing1.csv",header=TRUE)
#skoring
df = read.csv('/Users/aryagilang/Documents/praktikum-datascience/reviews_tripadvisor.csv', sep =";")
# split data
label <- sample(x=2,size=nrow(df),replace=T,prob=c(0.8,0.2))
df_train <- df[label==1,]
df_test <- df[label==2,]
kolom_X = c('Rating')
kolom_y = c('Review')
X_train = df_train[kolom_X]
y_train = df_train[kolom_y]
X_test = df_test[kolom_X]
y_test = df_test[kolom_y]
write.csv(X_train, "/Users/aryagilang/Documents/praktikum-datascience/df-train.csv")
write.csv(y_train, "/Users/aryagilang/Documents/praktikum-datascience/df-train.csv")
write.csv(X_test, "/Users/aryagilang/Documents/praktikum-datascience/df_test.csv")
write.csv(y_test, "/Users/aryagilang/Documents/praktikum-datascience/df_test.csv")
dataLabel<- read.csv("/Users/aryagilang/Documents/praktikum-datascience/data_labelling.csv", sep=";")
dataPreProcessing <- read.csv("dataPreProcessing1.csv")
dataTrain <- read.csv("df-train.csv")
dataTest <- read.csv("df-test.csv")
dataTrain2 <- read.csv("df_train.csv")
dataTest2 <- read.csv("df_test.csv")
ui <- fluidPage(
titlePanel("Sentiment Analysis Review Tripadvisor"),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Bagan", plotOutput("scatterplot")),
# Plot
tabPanel("Data", DT::dataTableOutput('tbl1')),
# Output Data Dalam Tabel
tabPanel("Wordcloud", plotOutput("Wordcloud")),
tabPanel("Data List", DT::dataTableOutput('tbl2')),
tabPanel("Data Train 1", dataTableOutput("tbl3")),
tabPanel("Data Test 1", dataTableOutput("tbl4")),
tabPanel("Data Test 2", dataTableOutput("tbl5")),
tabPanel("Data Train 2", dataTableOutput("tbl6")),
)
)
)
# SERVER
server <- function(input, output) {
# Output Data
output$tbl1 = DT::renderDataTable({
DT::datatable(dataLabel, options = list(lengthChange = FALSE))
})
output$tbl2 = DT::renderDataTable({
DT::datatable(dataPreProcessing, options = list(lengthChange = FALSE))
})
output$tbl3 = DT::renderDataTable({
DT::datatable(dataTrain, options = list(lengthChange = FALSE))
})
output$tbl4 = DT::renderDataTable({
DT::datatable(dataTest, options = list(lengthChange = FALSE))
})
output$tbl5 = DT::renderDataTable({
DT::datatable(dataTrain2, options = list(lengthChange = FALSE))
})
output$tbl6 = DT::renderDataTable({
DT::datatable(dataTest2, options = list(lengthChange = FALSE))
})
output$scatterplot <- renderPlot({produk_dataset<-read.csv("dataPreProcessing1.csv",stringsAsFactors = FALSE)
review <-as.character(produk_dataset$text)
s<-get_nrc_sentiment(review)
review_combine<-cbind(produk_dataset$text,s)
par(mar=rep(3,4))
barplot(colSums(s),col=rainbow(10),ylab='count',main='Sentiment Analysis Tripadvisor')
}, height=400)
output$Wordcloud <- renderPlot({
set.seed(20)
df<-df[sample(nrow(df)),]
df<-df[sample(nrow(df)),]
glimpse(df)
inspect(dtm[1:10,1:20])
df.train<-df[1:50,]
df.test<-df[51:100,]
dtm.train<-dtm[1:50,]
dtm.test<-dtm[51:100,]
dim(dtm.train)
fivefreq<-findFreqTerms(dtm.train,5)
length(fivefreq)
dtm.train.nb<-DocumentTermMatrix(corpus.clean.train,control = list(dictionary=fivefreq))
#dim(dtm.train.nb)
dtm.test.nb<-DocumentTermMatrix(corpus.clean.test,control = list(dictionary=fivefreq))
dim(dtm.test.nb)
convert_count <- function(x){
y<-ifelse(x>0,1,0)
y<-factor(y,levels=c(0,1),labels=c("no","yes"))
y
}
trainNB<-apply(dtm.train.nb,2,convert_count)
testNB<-apply(dtm.test.nb,1,convert_count)
wordcloud(corpus.clean,min.freq = 4,max.words=100,random.order=F,colors=brewer.pal(8,"Dark2"))
})
output$Freqword <-
renderPlot({produk_dataset<-read.csv("dataPreProcessing1.csv",stringsAsFactors = FALSE)
dtm <- TermDocumentMatrix("dataPreProcessing1.csv")
m <- as.matrix(data$text)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names (v), freq=v)
head(d,10) #menampilkan 10 kata paling banyak muncul
}, height=400)
}
shinyApp(ui = ui, server = server)
write.csv(X_train, "/Users/aryagilang/Documents/praktikum-datascience/df-train.csv")
write.csv(y_train, "/Users/aryagilang/Documents/praktikum-datascience/df_train.csv")
write.csv(X_test, "/Users/aryagilang/Documents/praktikum-datascience/df_test.csv")
write.csv(y_test, "/Users/aryagilang/Documents/praktikum-datascience/df-test.csv")
dataLabel<- read.csv("/Users/aryagilang/Documents/praktikum-datascience/data_labelling.csv", sep=";")
dataPreProcessing <- read.csv("dataPreProcessing1.csv")
dataTrain <- read.csv("df-train.csv")
dataTest <- read.csv("df-test.csv")
dataTrain2 <- read.csv("df_train.csv")
dataTest2 <- read.csv("df_test.csv")
ui <- fluidPage(
titlePanel("Sentiment Analysis Review Tripadvisor"),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Bagan", plotOutput("scatterplot")),
# Plot
tabPanel("Data", DT::dataTableOutput('tbl1')),
# Output Data Dalam Tabel
tabPanel("Wordcloud", plotOutput("Wordcloud")),
tabPanel("Data List", DT::dataTableOutput('tbl2')),
tabPanel("Data Train 1", dataTableOutput("tbl3")),
tabPanel("Data Test 1", dataTableOutput("tbl4")),
tabPanel("Data Test 2", dataTableOutput("tbl5")),
tabPanel("Data Train 2", dataTableOutput("tbl6")),
)
)
)
# SERVER
server <- function(input, output) {
# Output Data
output$tbl1 = DT::renderDataTable({
DT::datatable(dataLabel, options = list(lengthChange = FALSE))
})
output$tbl2 = DT::renderDataTable({
DT::datatable(dataPreProcessing, options = list(lengthChange = FALSE))
})
output$tbl3 = DT::renderDataTable({
DT::datatable(dataTrain, options = list(lengthChange = FALSE))
})
output$tbl4 = DT::renderDataTable({
DT::datatable(dataTest, options = list(lengthChange = FALSE))
})
output$tbl5 = DT::renderDataTable({
DT::datatable(dataTrain2, options = list(lengthChange = FALSE))
})
output$tbl6 = DT::renderDataTable({
DT::datatable(dataTest2, options = list(lengthChange = FALSE))
})
output$scatterplot <- renderPlot({produk_dataset<-read.csv("dataPreProcessing1.csv",stringsAsFactors = FALSE)
review <-as.character(produk_dataset$text)
s<-get_nrc_sentiment(review)
review_combine<-cbind(produk_dataset$text,s)
par(mar=rep(3,4))
barplot(colSums(s),col=rainbow(10),ylab='count',main='Sentiment Analysis Tripadvisor')
}, height=400)
output$Wordcloud <- renderPlot({
set.seed(20)
df<-df[sample(nrow(df)),]
df<-df[sample(nrow(df)),]
glimpse(df)
inspect(dtm[1:10,1:20])
df.train<-df[1:50,]
df.test<-df[51:100,]
dtm.train<-dtm[1:50,]
dtm.test<-dtm[51:100,]
dim(dtm.train)
fivefreq<-findFreqTerms(dtm.train,5)
length(fivefreq)
dtm.train.nb<-DocumentTermMatrix(corpus.clean.train,control = list(dictionary=fivefreq))
#dim(dtm.train.nb)
dtm.test.nb<-DocumentTermMatrix(corpus.clean.test,control = list(dictionary=fivefreq))
dim(dtm.test.nb)
convert_count <- function(x){
y<-ifelse(x>0,1,0)
y<-factor(y,levels=c(0,1),labels=c("no","yes"))
y
}
trainNB<-apply(dtm.train.nb,2,convert_count)
testNB<-apply(dtm.test.nb,1,convert_count)
wordcloud(corpus.clean,min.freq = 4,max.words=100,random.order=F,colors=brewer.pal(8,"Dark2"))
})
output$Freqword <-
renderPlot({produk_dataset<-read.csv("dataPreProcessing1.csv",stringsAsFactors = FALSE)
dtm <- TermDocumentMatrix("dataPreProcessing1.csv")
m <- as.matrix(data$text)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names (v), freq=v)
head(d,10) #menampilkan 10 kata paling banyak muncul
}, height=400)
}
shinyApp(ui = ui, server = server)
View(barplt)
df = read.csv('/Users/aryagilang/Documents/praktikum-datascience/reviews_tripadvisor.csv', sep =";")
# split data
label <- sample(x=2,size=nrow(df),replace=T,prob=c(0.8,0.2))
df_train <- df[label==1,]
df_test <- df[label==2,]
kolom_X = c('Rating')
kolom_y = c('Review')
X_train = df_train[kolom_X]
y_train = df_train[kolom_y]
X_test = df_test[kolom_X]
y_test = df_test[kolom_y]
dataLabel<- read.csv("/Users/aryagilang/Documents/praktikum-datascience/data_labelling.csv", sep=";")
dataPreProcessing <- read.csv("dataPreProcessing1.csv")
dataTrain <- read.csv("df-train.csv")
dataTest <- read.csv("df-test.csv")
dataTrain2 <- read.csv("df_train.csv")
dataTest2 <- read.csv("df_test.csv")
ui <- fluidPage(
titlePanel("Sentiment Analysis Review Tripadvisor"),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Bagan", plotOutput("scatterplot")),
# Plot
tabPanel("Data Label", DT::dataTableOutput('tbl1')),
# Output Data Dalam Tabel
tabPanel("Wordcloud", plotOutput("Wordcloud")),
tabPanel("Data List", DT::dataTableOutput('tbl2')),
tabPanel("Data Train 1", dataTableOutput("tbl3")),
tabPanel("Data Test 1", dataTableOutput("tbl4")),
tabPanel("Data Test 2", dataTableOutput("tbl5")),
tabPanel("Data Train 2", dataTableOutput("tbl6")),
)
)
)
# SERVER
server <- function(input, output) {
# Output Data
output$tbl1 = DT::renderDataTable({
DT::datatable(dataLabel, options = list(lengthChange = FALSE))
})
output$tbl2 = DT::renderDataTable({
DT::datatable(dataPreProcessing, options = list(lengthChange = FALSE))
})
output$tbl3 = DT::renderDataTable({
DT::datatable(dataTrain, options = list(lengthChange = FALSE))
})
output$tbl4 = DT::renderDataTable({
DT::datatable(dataTest, options = list(lengthChange = FALSE))
})
output$tbl5 = DT::renderDataTable({
DT::datatable(dataTrain2, options = list(lengthChange = FALSE))
})
output$tbl6 = DT::renderDataTable({
DT::datatable(dataTest2, options = list(lengthChange = FALSE))
})
output$scatterplot <- renderPlot({produk_dataset<-read.csv("dataPreProcessing1.csv",stringsAsFactors = FALSE)
review <-as.character(produk_dataset$text)
s<-get_nrc_sentiment(review)
review_combine<-cbind(produk_dataset$text,s)
par(mar=rep(3,4))
barplot(colSums(s),col=rainbow(10),ylab='count',main='Sentiment Analysis Tripadvisor')
}, height=400)
output$Wordcloud <- renderPlot({
set.seed(20)
df<-df[sample(nrow(df)),]
df<-df[sample(nrow(df)),]
glimpse(df)
inspect(dtm[1:10,1:20])
df.train<-df[1:50,]
df.test<-df[51:100,]
dtm.train<-dtm[1:50,]
dtm.test<-dtm[51:100,]
dim(dtm.train)
fivefreq<-findFreqTerms(dtm.train,5)
length(fivefreq)
dtm.train.nb<-DocumentTermMatrix(corpus.clean.train,control = list(dictionary=fivefreq))
#dim(dtm.train.nb)
dtm.test.nb<-DocumentTermMatrix(corpus.clean.test,control = list(dictionary=fivefreq))
dim(dtm.test.nb)
convert_count <- function(x){
y<-ifelse(x>0,1,0)
y<-factor(y,levels=c(0,1),labels=c("no","yes"))
y
}
trainNB<-apply(dtm.train.nb,2,convert_count)
testNB<-apply(dtm.test.nb,1,convert_count)
wordcloud(corpus.clean,min.freq = 4,max.words=100,random.order=F,colors=brewer.pal(8,"Dark2"))
})
output$Freqword <-
renderPlot({produk_dataset<-read.csv("dataPreProcessing1.csv",stringsAsFactors = FALSE)
dtm <- TermDocumentMatrix("dataPreProcessing1.csv")
m <- as.matrix(data$text)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names (v), freq=v)
head(d,10) #menampilkan 10 kata paling banyak muncul
}, height=400)
}
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(wordcloud2)
library(vroom)
library(here)
library(RTextTools)
library(dplyr)
library(wordcloud)
library(shiny)
library(ggplot2)
library(plotly)
library(syuzhet)
library(e1071)
library(caret)
library(DT)
d <- read.csv("/Users/aryagilang/Documents/prak datascience/reviews_tripadvisor.csv")
komentar <- d$Review
ratting <- d$Rating
reviewC <- Corpus(VectorSource(komentar))
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
reviewclean <- tm_map(reviewC, removeURL)
removeNL <- function(y) gsub("\n", " ", y)
reviewclean <- tm_map(reviewclean, removeNL)
replacecomma <- function(y) gsub(",", "", y)
reviewclean <- tm_map(reviewclean, replacecomma)
removeRT <- function(y) gsub("RT ", "", y)
reviewclean <- tm_map(reviewclean, removeRT)
removetitik2 <- function(y) gsub(":", "", y)
reviewclean <- tm_map(reviewclean, removetitik2)
removetitikkoma <- function(y) gsub(";", " ", y)
reviewclean <- tm_map(reviewclean, removetitikkoma)
removetitik3 <- function(y) gsub("p…", "", y)
reviewclean <- tm_map(reviewclean, removetitik3)
removeamp <- function(y) gsub("&amp;", "", y)
reviewclean <- tm_map(reviewclean, removeamp)
removeUN <- function(z) gsub("@\\w+", "", z)
reviewclean <- tm_map(reviewclean, removeUN)
removesym <- function(y) gsub("ð", "", y)
reviewclean <- tm_map(reviewclean, removesym)
remove.all <- function(xy) gsub("[^[:alpha:][:space:]]*", "", xy)
reviewclean <- tm_map(reviewclean,remove.all)
reviewclean <- tm_map(reviewclean, removePunctuation)
reviewclean <- tm_map(reviewclean, tolower)
dataframe1<-data.frame(text=unlist(sapply(reviewclean, `[`)), stringsAsFactors=F)
dataframe2 <-data.frame(dataframe1, ratting)
write.csv(dataframe2,file = "/Users/aryagilang/Documents/prak datascience/dataPreProcessing1.csv")
d<-read.csv("/Users/aryagilang/Documents/prak datascience/dataPreProcessing1.csv",stringsAsFactors = FALSE)
#merubah text menjadi char
review <-as.character(d$text)
s <- get_nrc_sentiment(review, cl = NULL, language = "english", lowercase = TRUE)
#klasifikasi data
review_combine<-cbind(d$text,s)
par(mar=rep(3,4))
a<- barplot(colSums(s),col=rainbow(10), xlab ='emotion', ylab='count',main='Sentiment Analysis')
barplt <- a
data_label <- read.csv("/Users/aryagilang/Documents/praktikum-datascience/data_labelling.csv", sep =";")
require (corpus)
df<-read.csv("dataPreProcessing1.csv",stringsAsFactors = FALSE)
glimpse(df)
set.seed(20)
df<-df[sample(nrow(df)),]
df<-df[sample(nrow(df)),]
glimpse(df)
corpus<-Corpus(VectorSource(df$text))
corpus
inspect(corpus[1:10])
#fungsinya untuk membersihkan data data yang tidak dibutuhkan
corpus.clean<-corpus%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, c("work", "from", "home"))%>%
tm_map(removeWords,stopwords(kind="en"))%>%
tm_map(stripWhitespace)
dtm<-DocumentTermMatrix(corpus.clean)
inspect(dtm[1:10,1:20])
df.train<-df[1:50,]
df.test<-df[51:100,]
dtm.train<-dtm[1:50,]
dtm.test<-dtm[51:100,]
corpus.clean.train<-corpus.clean[1:50]
corpus.clean.test<-corpus.clean[51:100]
dim(dtm.train)
fivefreq<-findFreqTerms(dtm.train,5)
length(fivefreq)
dtm.train.nb<-DocumentTermMatrix(corpus.clean.train,control = list(dictionary=fivefreq))
#dim(dtm.train.nb)
dtm.test.nb<-DocumentTermMatrix(corpus.clean.test,control = list(dictionary=fivefreq))
dim(dtm.test.nb)
convert_count <- function(x){
y<-ifelse(x>0,1,0)
y<-factor(y,levels=c(0,1),labels=c("no","yes"))
y
}
trainNB<-apply(dtm.train.nb,2,convert_count)
testNB<-apply(dtm.test.nb,1,convert_count)
wordcloud(corpus.clean,min.freq = 4,max.words=100,random.order=F,colors=brewer.pal(8,"Dark2"))
kalimat2<-read.csv("dataPreProcessing1.csv",header=TRUE)
#skoring
dataLabel<- read.csv("/Users/aryagilang/Documents/praktikum-datascience/data_labelling.csv", sep=";")
dataPreProcessing <- read.csv("dataPreProcessing1.csv")
ui <- fluidPage(
titlePanel("Sentiment Analysis Review Tripadvisor"),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Bagan", plotOutput("scatterplot")),
# Plot
tabPanel("Data Label", DT::dataTableOutput('tbl1')),
# Output Data Dalam Tabel
tabPanel("Wordcloud", plotOutput("Wordcloud")),
tabPanel("Data List", DT::dataTableOutput('tbl2')),
)
)
)
# SERVER
server <- function(input, output) {
# Output Data
output$tbl1 = DT::renderDataTable({
DT::datatable(dataLabel, options = list(lengthChange = FALSE))
})
output$tbl2 = DT::renderDataTable({
DT::datatable(dataPreProcessing, options = list(lengthChange = FALSE))
})
output$tbl3 = DT::renderDataTable({
DT::datatable(dataTrain, options = list(lengthChange = FALSE))
})
output$tbl4 = DT::renderDataTable({
DT::datatable(dataTest, options = list(lengthChange = FALSE))
})
output$tbl5 = DT::renderDataTable({
DT::datatable(dataTrain2, options = list(lengthChange = FALSE))
})
output$tbl6 = DT::renderDataTable({
DT::datatable(dataTest2, options = list(lengthChange = FALSE))
})
output$scatterplot <- renderPlot({produk_dataset<-read.csv("dataPreProcessing1.csv",stringsAsFactors = FALSE)
review <-as.character(produk_dataset$text)
s<-get_nrc_sentiment(review)
review_combine<-cbind(produk_dataset$text,s)
par(mar=rep(3,4))
barplot(colSums(s),col=rainbow(10),ylab='count',main='Sentiment Analysis Tripadvisor')
}, height=400)
output$Wordcloud <- renderPlot({
set.seed(20)
df<-df[sample(nrow(df)),]
df<-df[sample(nrow(df)),]
glimpse(df)
inspect(dtm[1:10,1:20])
df.train<-df[1:50,]
df.test<-df[51:100,]
dtm.train<-dtm[1:50,]
dtm.test<-dtm[51:100,]
dim(dtm.train)
fivefreq<-findFreqTerms(dtm.train,5)
length(fivefreq)
dtm.train.nb<-DocumentTermMatrix(corpus.clean.train,control = list(dictionary=fivefreq))
#dim(dtm.train.nb)
dtm.test.nb<-DocumentTermMatrix(corpus.clean.test,control = list(dictionary=fivefreq))
dim(dtm.test.nb)
convert_count <- function(x){
y<-ifelse(x>0,1,0)
y<-factor(y,levels=c(0,1),labels=c("no","yes"))
y
}
trainNB<-apply(dtm.train.nb,2,convert_count)
testNB<-apply(dtm.test.nb,1,convert_count)
wordcloud(corpus.clean,min.freq = 4,max.words=100,random.order=F,colors=brewer.pal(8,"Dark2"))
})
output$Freqword <-
renderPlot({produk_dataset<-read.csv("dataPreProcessing1.csv",stringsAsFactors = FALSE)
dtm <- TermDocumentMatrix("dataPreProcessing1.csv")
m <- as.matrix(data$text)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names (v), freq=v)
head(d,10) #menampilkan 10 kata paling banyak muncul
}, height=400)
}
shinyApp(ui = ui, server = server)
